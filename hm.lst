Microsoft (R) Macro Assembler Version 6.15.8803		    05/09/19 02:41:15
hm.asm							     Page 1 - 1


				;ustaad        me
				;BufSize       BUFSIZE
				;buffer        buffer
				;stdInHandle   fileHnadle
				;bytesRead     bytesRead 


				include irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				include macros.inc
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDELIB user32.lib

				;BufSize = 80		; defining buffer size

 00000000			.data

 = 00000080			    MAX = 128                    ;max chars to read
 00000000  00000081 [		    stringIn BYTE MAX+1 DUP (?)  ;room for null  
	    00
	   ]
 00000081 43 6F 64 65 20	    msg BYTE "Code run time: ",0  
	   72 75 6E 20 74
	   69 6D 65 3A 20
	   00


				    ;DATA for output file..................................
 = 00001388			    BUFSIZE = 5000
 00000091  00001388 [		    buffer BYTE BUFSIZE DUP(?)
	    00
	   ]
 00001419 00000000		    bytesRead DWORD ?

 0000141D 43 61 6E 6E 6F	    errMsg BYTE "Cannot open file",0dh,0ah,0
	   74 20 6F 70 65
	   6E 20 66 69 6C
	   65 0D 0A 00
 00001430 68 61 72 69 73	    filename     BYTE "haris.txt",0
	   2E 74 78 74 00
 0000143A 00000000		    fileHandle   DWORD ?	; handle to output file
 0000143E 00000000		    byteCount    DWORD ?    	; number of bytes written
				    ;.....................................................

 00001442 00			    key BYTE ?
				    
 00000000			.code 
 00000000			main PROC
 00000000  E8 00000000 E	    call GetMseconds
 00000005  8B D8		    mov ebx, eax

 00000007  E8 00000000 E	    call ClrScr
				    mGotoxy 30, 8
 0000000C  52		     1		push edx
 0000000D  B6 08	     1	    mov  dh,8
 0000000F  B2 1E	     1	    mov  dl,30
 00000011  E8 00000000 E     1		call Gotoxy
 00000016  5A		     1		pop  edx
				    mWrite "|------------------------------|"
 00001443		     1		.data				
 00001443 7C 2D 2D 2D 2D     1		??0000 BYTE "|------------------------------|",0		
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 7C 00
 00000017		     1		.code
 00000017  52		     1		push edx
 00000018  BA 00001443 R     1		mov  edx,OFFSET ??0000
 0000001D  E8 00000000 E     1		call Writestring
 00000022  5A		     1		pop  edx
				    mGotoxy 30, 9
 00000023  52		     1		push edx
 00000024  B6 09	     1	    mov  dh,9
 00000026  B2 1E	     1	    mov  dl,30
 00000028  E8 00000000 E     1		call Gotoxy
 0000002D  5A		     1		pop  edx
				    mWrite "| HM Editor                    |"
 00001464		     1		.data				
 00001464 7C 20 48 4D 20     1		??0001 BYTE "| HM Editor                    |",0		
	   45 64 69 74 6F
	   72 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 00
 0000002E		     1		.code
 0000002E  52		     1		push edx
 0000002F  BA 00001464 R     1		mov  edx,OFFSET ??0001
 00000034  E8 00000000 E     1		call Writestring
 00000039  5A		     1		pop  edx
				    mGotoxy 30, 10
 0000003A  52		     1		push edx
 0000003B  B6 0A	     1	    mov  dh,10
 0000003D  B2 1E	     1	    mov  dl,30
 0000003F  E8 00000000 E     1		call Gotoxy
 00000044  5A		     1		pop  edx
				    mWrite "| Developed by:                |"
 00001485		     1		.data				
 00001485 7C 20 44 65 76     1		??0002 BYTE "| Developed by:                |",0		
	   65 6C 6F 70 65
	   64 20 62 79 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 00
 00000045		     1		.code
 00000045  52		     1		push edx
 00000046  BA 00001485 R     1		mov  edx,OFFSET ??0002
 0000004B  E8 00000000 E     1		call Writestring
 00000050  5A		     1		pop  edx
				    mGotoxy 30, 11
 00000051  52		     1		push edx
 00000052  B6 0B	     1	    mov  dh,11
 00000054  B2 1E	     1	    mov  dl,30
 00000056  E8 00000000 E     1		call Gotoxy
 0000005B  5A		     1		pop  edx
				    mWrite "|                              |" 
 000014A6		     1		.data				
 000014A6 7C 20 20 20 20     1		??0003 BYTE "|                              |",0		
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 00
 0000005C		     1		.code
 0000005C  52		     1		push edx
 0000005D  BA 000014A6 R     1		mov  edx,OFFSET ??0003
 00000062  E8 00000000 E     1		call Writestring
 00000067  5A		     1		pop  edx
				    mGotoxy 30, 12
 00000068  52		     1		push edx
 00000069  B6 0C	     1	    mov  dh,12
 0000006B  B2 1E	     1	    mov  dl,30
 0000006D  E8 00000000 E     1		call Gotoxy
 00000072  5A		     1		pop  edx
				    mWrite "| M.Haris Noori P17-6003       |"
 000014C7		     1		.data				
 000014C7 7C 20 4D 2E 48     1		??0004 BYTE "| M.Haris Noori P17-6003       |",0		
	   61 72 69 73 20
	   4E 6F 6F 72 69
	   20 50 31 37 2D
	   36 30 30 33 20
	   20 20 20 20 20
	   20 7C 00
 00000073		     1		.code
 00000073  52		     1		push edx
 00000074  BA 000014C7 R     1		mov  edx,OFFSET ??0004
 00000079  E8 00000000 E     1		call Writestring
 0000007E  5A		     1		pop  edx
				    mGotoxy 30, 13
 0000007F  52		     1		push edx
 00000080  B6 0D	     1	    mov  dh,13
 00000082  B2 1E	     1	    mov  dl,30
 00000084  E8 00000000 E     1		call Gotoxy
 00000089  5A		     1		pop  edx
				    mWrite "| Mubeen Ghauri P17-6107       |"
 000014E8		     1		.data				
 000014E8 7C 20 4D 75 62     1		??0005 BYTE "| Mubeen Ghauri P17-6107       |",0		
	   65 65 6E 20 47
	   68 61 75 72 69
	   20 50 31 37 2D
	   36 31 30 37 20
	   20 20 20 20 20
	   20 7C 00
 0000008A		     1		.code
 0000008A  52		     1		push edx
 0000008B  BA 000014E8 R     1		mov  edx,OFFSET ??0005
 00000090  E8 00000000 E     1		call Writestring
 00000095  5A		     1		pop  edx
				    mGotoxy 30, 14
 00000096  52		     1		push edx
 00000097  B6 0E	     1	    mov  dh,14
 00000099  B2 1E	     1	    mov  dl,30
 0000009B  E8 00000000 E     1		call Gotoxy
 000000A0  5A		     1		pop  edx
				    mWrite "|------------------------------|"
 00001509		     1		.data				
 00001509 7C 2D 2D 2D 2D     1		??0006 BYTE "|------------------------------|",0		
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 7C 00
 000000A1		     1		.code
 000000A1  52		     1		push edx
 000000A2  BA 00001509 R     1		mov  edx,OFFSET ??0006
 000000A7  E8 00000000 E     1		call Writestring
 000000AC  5A		     1		pop  edx
				    ;mGotoxy 50, 20

				    ;program loading....
				    mGotoxy 35, 15   
 000000AD  52		     1		push edx
 000000AE  B6 0F	     1	    mov  dh,15
 000000B0  B2 23	     1	    mov  dl,35
 000000B2  E8 00000000 E     1		call Gotoxy
 000000B7  5A		     1		pop  edx
 000000B8  B8 000003E8		    mov  eax,1000 
 000000BD  E8 00000000 E	    call Delay
				    mWrite "Loading ."
 0000152A		     1		.data				
 0000152A 4C 6F 61 64 69     1		??0007 BYTE "Loading .",0		
	   6E 67 20 2E 00
 000000C2		     1		.code
 000000C2  52		     1		push edx
 000000C3  BA 0000152A R     1		mov  edx,OFFSET ??0007
 000000C8  E8 00000000 E     1		call Writestring
 000000CD  5A		     1		pop  edx
 000000CE  B8 000003E8		    mov  eax,1000 
 000000D3  E8 00000000 E	    call Delay
				    mWrite " ."
 00001534		     1		.data				
 00001534 20 2E 00	     1		??0008 BYTE " .",0		
 000000D8		     1		.code
 000000D8  52		     1		push edx
 000000D9  BA 00001534 R     1		mov  edx,OFFSET ??0008
 000000DE  E8 00000000 E     1		call Writestring
 000000E3  5A		     1		pop  edx
 000000E4  E8 00000000 E	    call Delay
 000000E9  E8 00000000 E	    call ClrScr

				    mGotoxy 15, 1
 000000EE  52		     1		push edx
 000000EF  B6 01	     1	    mov  dh,1
 000000F1  B2 0F	     1	    mov  dl,15
 000000F3  E8 00000000 E     1		call Gotoxy
 000000F8  5A		     1		pop  edx
				    mWriteLn "Do you want to read from file- (Y/N) ?"
 00001537		     2		.data				
 00001537 44 6F 20 79 6F     2		??0009 BYTE "Do you want to read from file- (Y/N) ?",0		
	   75 20 77 61 6E
	   74 20 74 6F 20
	   72 65 61 64 20
	   66 72 6F 6D 20
	   66 69 6C 65 2D
	   20 28 59 2F 4E
	   29 20 3F 00
 000000F9		     2		.code
 000000F9  52		     2		push edx
 000000FA  BA 00001537 R     2		mov  edx,OFFSET ??0009
 000000FF  E8 00000000 E     2		call Writestring
 00000104  5A		     2		pop  edx
 00000105  E8 00000000 E     1		call Crlf
 0000010A  E8 00000000 E	    call ReadChar
 0000010F  A2 00001442 R	    mov key, al

 00000114  80 3D 00001442 R	    cmp key, "Y"            ;READ OR WRITE
	   59
 0000011B  74 15		    je read_from_file
 0000011D  EB 00		    jmp write_in_file




 0000011F			    write_in_file:
				    ;...WRITE FILE CODE STARTS HERE.......................................................
				    mWriteLn " -- Write your text -- "
 0000155E		     2		.data				
 0000155E 20 2D 2D 20 57     2		??000A BYTE " -- Write your text -- ",0		
	   72 69 74 65 20
	   79 6F 75 72 20
	   74 65 78 74 20
	   2D 2D 20 00
 0000011F		     2		.code
 0000011F  52		     2		push edx
 00000120  BA 0000155E R     2		mov  edx,OFFSET ??000A
 00000125  E8 00000000 E     2		call Writestring
 0000012A  5A		     2		pop  edx
 0000012B  E8 00000000 E     1		call Crlf


 00000130  EB 70		    jmp QuitNow
				    ;...WRITE FILE CODE STARTS HERE.......................................................


				    

				    ; mGotoxy 10, 2
				    ; mov  edx,OFFSET stringIn
				    ; mov  ecx,MAX            ;buffer size - 1
				    ; call ReadString

 00000132			    read_from_file:       
				    ;READ FILE CODE STARTS HERE...............................................
				    INVOKE CreateFile,
					  ADDR filename, GENERIC_READ, DO_NOT_SHARE, NULL,
					  OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, 0

 0000014E  A3 0000143A R	    mov fileHandle,eax		; save file handle
					.IF eax == INVALID_HANDLE_VALUE
 00000158  BA 0000141D R		  mov  edx,OFFSET errMsg		; Display error message
 0000015D  E8 00000000 E		  call WriteString
 00000162  EB 3E			  jmp  QuitNow
					.ENDIF

				    INVOKE ReadFile,		; write text to file
					    fileHandle,		; file handle
					    ADDR buffer,		; buffer pointer
					    bufSize,		; number of bytes to write
					    ADDR byteCount,		; number of bytes written
					    0		; overlapped execution flag

				    INVOKE CloseHandle, fileHandle

 0000018B  8B 35 0000143E R	    mov esi,byteCount		; insert null terminator
 00000191  C6 86 00000091 R		mov buffer[esi],0		; into buffer
	   00
 00000198  BA 00000091 R		mov edx,OFFSET buffer		; display the buffer
 0000019D  E8 00000000 E		call WriteString
				    ;............READ FILE CODE ENDS HERE........................................................

 000001A2			    QuitNow:
				    mGotoxy 0, 18
 000001A2  52		     1		push edx
 000001A3  B6 12	     1	    mov  dh,18
 000001A5  B2 00	     1	    mov  dl,0
 000001A7  E8 00000000 E     1		call Gotoxy
 000001AC  5A		     1		pop  edx
				    mWriteLn "Press Enter to exit the Program "
 00001576		     2		.data				
 00001576 50 72 65 73 73     2		??000B BYTE "Press Enter to exit the Program ",0		
	   20 45 6E 74 65
	   72 20 74 6F 20
	   65 78 69 74 20
	   74 68 65 20 50
	   72 6F 67 72 61
	   6D 20 00
 000001AD		     2		.code
 000001AD  52		     2		push edx
 000001AE  BA 00001576 R     2		mov  edx,OFFSET ??000B
 000001B3  E8 00000000 E     2		call Writestring
 000001B8  5A		     2		pop  edx
 000001B9  E8 00000000 E     1		call Crlf
 000001BE  E8 00000000 E	    call WaitMsg
 000001C3  E8 00000000 E	    call ClrScr

				    
 000001C8  E8 00000000 E	    call crlf
 000001CD  BA 00000081 R	    mov edx, OFFSET msg
 000001D2  E8 00000000 E	    call WriteString

 000001D7  E8 00000000 E	    call GetMseconds
 000001DC  2B C3		    sub eax, ebx
 000001DE  E8 00000000 E	    call WriteInt


				exit

 000001EA			main endp
				end main
Microsoft (R) Macro Assembler Version 6.15.8803		    05/09/19 02:41:15
hm.asm							     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
NewLine  . . . . . . . . . . . .	Proc
ShowFlag . . . . . . . . . . . .	Proc
ShowRegister . . . . . . . . . .	Proc
Startup  . . . . . . . . . . . .	Proc
WriteSpace . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mNewLine . . . . . . . . . . . .	Proc
mReadStr . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteStr  . . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00001597 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001EA DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001EA Public STDCALL
  write_in_file  . . . . . . . .	L Near	 0000011F _TEXT	
  read_from_file . . . . . . . .	L Near	 00000132 _TEXT	
  QuitNow  . . . . . . . . . . .	L Near	 000001A2 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00001443 _DATA	
??0001 . . . . . . . . . . . . .	Byte	 00001464 _DATA	
??0002 . . . . . . . . . . . . .	Byte	 00001485 _DATA	
??0003 . . . . . . . . . . . . .	Byte	 000014A6 _DATA	
??0004 . . . . . . . . . . . . .	Byte	 000014C7 _DATA	
??0005 . . . . . . . . . . . . .	Byte	 000014E8 _DATA	
??0006 . . . . . . . . . . . . .	Byte	 00001509 _DATA	
??0007 . . . . . . . . . . . . .	Byte	 0000152A _DATA	
??0008 . . . . . . . . . . . . .	Byte	 00001534 _DATA	
??0009 . . . . . . . . . . . . .	Byte	 00001537 _DATA	
??000A . . . . . . . . . . . . .	Byte	 0000155E _DATA	
??000B . . . . . . . . . . . . .	Byte	 00001576 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
BUFSIZE  . . . . . . . . . . . .	Number	 00001388h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MAX  . . . . . . . . . . . . . .	Number	 00000080h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000091 _DATA	
byteCount  . . . . . . . . . . .	DWord	 0000143E _DATA	
bytesRead  . . . . . . . . . . .	DWord	 00001419 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
errMsg . . . . . . . . . . . . .	Byte	 0000141D _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileHandle . . . . . . . . . . .	DWord	 0000143A _DATA	
filename . . . . . . . . . . . .	Byte	 00001430 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
key  . . . . . . . . . . . . . .	Byte	 00001442 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msg  . . . . . . . . . . . . . .	Byte	 00000081 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
stringIn . . . . . . . . . . . .	Byte	 00000000 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
